{{ 'template-collection.css' | asset_url | stylesheet_tag }}
{{ 'component-loading-overlay.css' | asset_url | stylesheet_tag }}
{{ 'component-card.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}

{{ 'wick--collection.css' | asset_url | stylesheet_tag }}
{{ 'wick--component-card.css' | asset_url | stylesheet_tag }}
{{ 'comparison-product.css' | asset_url | stylesheet_tag }}

<link rel="preload" href="{{ 'component-rte.css' | asset_url }}" as="style" onload="this.onload=null;this.rel='stylesheet'">




{%- if section.settings.enable_quick_add -%}
  <link rel="stylesheet" href="{{ 'quick-add.css' | asset_url }}" media="print" onload="this.media='all'">
  <script src="{{ 'quick-add.js' | asset_url }}" defer="defer"></script>
{%- endif -%}
<script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>
<noscript>{{ 'component-rte.css' | asset_url | stylesheet_tag }}</noscript>

{%- style -%}

{% if collection.handle == "triple-threat" %}
.filter-icon-btn, .collection-top-wrapper {opacity:0 !important; display:none !important;}
  .mobile-facets__wrapper{display:none !important;}
 .product-variant-list .information__variant-wrapper>span.card-information__text {
    margin-top: 3px;
}
{% endif %}  
   .section--collection .sorting .facet-filters__label {
    word-spacing: 0px;
} 
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

{% assign collection_ads = collection.metafields.custom.collection_ad %}
{% assign collection_links = collection.metafields.custom.collection_link %}
{% assign variant_card = collection.metafields.custom.variant_cards %}
<div class="section-{{ section.id }}-padding section--collection" id="{{ collection.title | handle }}">
  {% comment %} Sort is the first tabbable element when filter type is vertical {% endcomment %}
  {%- if section.settings.enable_sorting and section.settings.filter_type == 'vertical' -%}
    <facet-filters-form class="facets facets-vertical-sort page-width small-hide no-js-hidden">
      <div class="collection-top-wrapper">
        
      <div class="filter-icon-btn">
        {% render 'filter-icon' %} Filters
      </div>
      {% comment %}
      {% if quick_filters != blank %}
      <div class="quick-filter-wrapper">
      <ul class="quick-filter-link">
        {% for quick_filter in  quick_filters.value %}
          {% for filter in collection.filters %}
            {% for value in filter.values %}
              {% assign lower_val = value.label | downcase %}
              {% assign quick_filter_val = quick_filter | downcase %}
              {% if lower_val == quick_filter_val %}
        <li filter-value ="{{ quick_filter }}">{{ quick_filter }}</li>
      {% endif %}
    {% endfor %}
  {% endfor %}
  {% endfor %}
      </ul>
      </div>
    {% endif %}
  {% endcomment %}
  {% if collection_links != blank %}
    <div class="quick-filter-wrapper">
    <ul class="quick-filter-link">
      {% for collection_link in  collection_links.value %}
      <li><a href="{{ collection_link.url }}">{{ collection_link.title }}</a></li>
     {% endfor %}
    </ul>
    </div>
  {% endif %}
      <form class="facets-vertical-form" id="FacetSortForm">
        <div class="facet-filters sorting caption">
          <div class="facet-filters__field">
            <h2 class="facet-filters__label caption-large text-body">
              <label id="SortBy">{{ 'products.facets.sort_by_label' | t }}: </label>
            </h2>
            <div class="select">
              {%- assign sort_by = collection.sort_by | default: collection.default_sort_by -%}
              <select name="sort_by" class="facet-filters__sort select__select caption-large" aria-labelledby="SortBy" aria-describedby="a11y-refresh-page-message">
                {%- for option in collection.sort_options -%}
                  {%  unless option.name contains "Date" or option.name contains "Alphabetically" %}
                  <option value="{{ option.value | escape }}"{% if option.value == sort_by %} selected="selected"{% endif %}>{{ option.name | escape }}</option>
                    {% endunless %}
                {%- endfor -%}
              </select>
              {% render 'arrow-down' %}
            </div>
          </div>
          <noscript>
            <button type="submit" class="facets__button-no-js button button--secondary">{{ 'products.facets.sort_button' | t }}</button>
          </noscript>
        </div>
      {% comment %}
        <div class="product-count-vertical light" role="status">
          <h2 class="product-count__text text-body">
            <span id="ProductCountDesktop">
              {%- if collection.results_count -%}
                {{ 'templates.search.results_with_count' | t: terms: collection.terms, count: collection.results_count }}
              {%- elsif collection.products_count == collection.all_products_count -%}
                {{ 'products.facets.product_count_simple' | t: count: collection.products_count }}
              {%- else -%}
                {{ 'products.facets.product_count' | t: product_count: collection.products_count, count: collection.all_products_count }}
              {%- endif -%}
            </span>
          </h2>
          <div class="loading-overlay__spinner">
            <svg aria-hidden="true" focusable="false" role="presentation" class="spinner" viewBox="0 0 66 66" xmlns="http://www.w3.org/2000/svg">
              <circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
            </svg>
          </div>
        </div>
      {% endcomment %}
      </form>
    </div>
    </facet-filters-form>
  {%- endif -%}

  <div class="{% if section.settings.filter_type == 'vertical' %} facets-vertical page-width{% endif %}">
    {{ 'component-facets.css' | asset_url | stylesheet_tag }}
    <script src="{{ 'facets.js' | asset_url }}" defer="defer"></script>

    {%- if section.settings.enable_filtering or section.settings.enable_sorting -%}
      <aside aria-labelledby="verticalTitle" class="facets-wrapper{% unless section.settings.enable_filtering %} facets-wrapper--no-filters{% endunless %}{% if section.settings.filter_type != 'vertical' %} page-fullwidth{% endif %}" id="main-collection-filters" data-id="{{ section.id }}">
        {% render 'facets', results: collection, enable_filtering: section.settings.enable_filtering, enable_sorting: section.settings.enable_sorting, filter_type: section.settings.filter_type %}
      </aside>
    {%- endif -%}
    <div class="product-grid-container" id="ProductGridContainer">
      {%- paginate collection.products by section.settings.products_per_page -%}
        {%- if collection.products.size == 0 -%}
          <div class="collection collection--empty page-fullwidth" id="product-grid" data-id="{{ section.id }}">
            <div class="loading-overlay gradient"></div>
            <div class="title-wrapper center">
              <h2 class="title title--primary">
                {{ 'sections.collection_template.empty' | t }}<br>
                {{ 'sections.collection_template.use_fewer_filters_html' | t: link: collection.url, class: "underlined-link link" }}
              </h2>
            </div>
          </div>
        {%- else -%}
          <div class="collection{% if section.settings.filter_type != 'vertical' %} page-fullwidth{% endif %}">
            <div class="loading-overlay gradient"></div>
            <ul id="product-grid" data-id="{{ section.id }}" class="
              grid product-grid grid--{{ section.settings.columns_mobile }}-col-tablet-down
              grid--{{ section.settings.columns_desktop }}-col-desktop grid--{{ section.settings.columns_desktop | times: 1 }}-col-widemonitor">
        
<style>
@media screen and (min-width: 768px) {
.collection-hero.banner--medium:not(.banner--adapt) {
    min-height: auto;
    padding-bottom: 40%;
}
.headban {
              width: calc(75% - 1.5rem);
    max-width: calc(75% - 1.5rem);
}
 .banner:after, .banner__media:after {
    opacity: 0.1;
}

          .banner__content.banner__content--bottom-left {
    position: absolute;
    bottom: 0px;
}

          .section--collection .facets-wrapper {
    margin-bottom: 0px;
    margin-top: 20px;
}

          .banner__content {
    padding: 0px;
}

          .collection-hero__title {
    text-align: left;
    font-size: 5rem;
    margin-bottom: -27px;        
          }
          
          
}

@media screen and (max-width: 768px) {





  .grid--2-col-tablet-down .grid-product__color-image a {
    padding: 20px;
  }

  
 .banner:after, .banner__media:after {
    opacity: 0.1;
}
          .section--collection .facets-wrapper {
    margin-bottom: 1rem;
    margin-top: 1rem;
}
}

{% if collection.template_suffix == 'marketing' %}

  .information__variant-wrapper>span.card-information__text, .life__style-title{

    text-transform: inherit;

  }

@media screen and (max-width:768px){

  .card--product .card__inner {

    padding-bottom:0px;

}

}

{% endif %}
          </style>
          
              {%- for product in collection.products -%}
                {%  unless product.tags contains "child-product" or product.title contains "TEST" %}
                {% assign lazy_load = false %}
                {%- if forloop.index > 2 -%}
                {%- assign lazy_load = true -%}
                {%- endif -%}
                {%  if variant_card %}
                  {% assign marketing_collection = collection.template_suffix %}
                  {% assign variant_show = collection.metafields.custom.show_variant  %}
                  {%- for option in product.options_with_values -%}
                    {% assign option_name = option.name | downcase %}
                    {% assign option_position = option.position %}
                    {% assign  option_values = option.values %}
                    {% if option_name == 'color' -%}
                          {%- for value in option_values -%}
                            {% assign show_variant = false %}
                            {% if marketing_collection == 'marketing' and variant_show.value != blank  %}
                            {% assign variant_downcase = value | downcase  %}
                            {% for variant_name in  variant_show.value %}
                            {% assign variant_name_down = variant_name | downcase %}
                            {% if variant_downcase contains variant_name_down %}
                              {% assign show_variant = true %}
                            {% endif %}
                            {% endfor %}
                            {% if show_variant %}
                            {% liquid
                              assign option_number = 'option' | append: option_position
                              if option_name == 'color'
                              capture variant_card
                               assign variant_with_color = product.variants | where: option_number, value | first
                               endcapture
                               endif
                            %}
                            <li class="grid__item">
                              {% render 'variant-card',
                                product_card_product: variant_with_color,
                                media_size: section.settings.image_ratio,
                                show_secondary_image: section.settings.show_secondary_image,
                                add_image_padding: section.settings.add_image_padding,
                                show_vendor: section.settings.show_vendor,
                                show_description: section.settings.show_description,
                                show_image_outline: section.settings.show_image_outline,
                                show_rating: section.settings.show_rating
                                show_cta: section.settings.enable_quick_add,
                                show_swatch: section.settings.enable_swatches 
                              %}
                              </li>
                            {% endif %}
                            {% else %}
                            {%- liquid
                               assign variant_card = blank
                               assign option_number = 'option' | append: option_position
                               if option_name == 'color'
                               capture variant_card
                                assign variant_with_color = product.variants | where: option_number, value | first
                               endcapture 
                               endif
                            -%}
                            <li class="grid__item">
                              {% render 'variant-card',
                                product_card_product: variant_with_color,
                                media_size: section.settings.image_ratio,
                                show_secondary_image: section.settings.show_secondary_image,
                                add_image_padding: section.settings.add_image_padding,
                                show_vendor: section.settings.show_vendor,
                                show_description: section.settings.show_description,
                                show_image_outline: section.settings.show_image_outline,
                                show_rating: section.settings.show_rating
                                show_cta: section.settings.enable_quick_add,
                                show_swatch: section.settings.enable_swatches 
                              %}
                              </li>
                            {% endif %}
                        {% endfor %}
                      {% endif %}
                    {% endfor %}        
                  {% else %}
                  {% if collection_ads != blank %}
                    {% assign add_to_show = forloop.index %}
                    {% for collection_ad in collection_ads.value %}
                      {% assign double_ad = collection_ad.double_column %}
                      {% assign ad_position  = collection_ad.ad_position %}
                      {{  }}
                  {% if add_to_show == ad_position and collection_ad.image != blank %}
                    <li class="collection-add-card {% if double_ad %} double-column-add {% else %}grid__item{% endif %}">
                      {% if collection_ad.link != blank %}
                        <a class="collection-add-link" href="{{ collection_ad.link }}">
                        {% endif %}
                      {% if collection_ad.image != blank %}
                        <div class="collection-add-card-image">
                          {% render 'image', image: collection_ad.image.value %}
                        </div>
                      {% endif %}
                      <div class="collection-add-text">
                        {% if collection_ad.title != blank %}
                          <h2 class="collection-add-headline">{{ collection_ad.title }}</h2>
                        {% endif %}
                      </div>
                      {% if collection_ad.link != blank %}
                    </a>
                    {% endif %}
                  </li>
                  {% endif %}
                {% endfor %}
                {% endif %}
                <li class="grid__item">
            {% render 'product-card',
              product_card_product: product,
              media_size: section.settings.image_ratio,
              show_secondary_image: section.settings.show_secondary_image,
              add_image_padding: section.settings.add_image_padding,
              show_vendor: section.settings.show_vendor,
              show_description: section.settings.show_description,
              show_image_outline: section.settings.show_image_outline,
              show_rating: section.settings.show_rating
              show_cta: section.settings.enable_quick_add,
              show_swatch: section.settings.enable_swatches,
              show_compare:section.settings.show_compare
            %}
                </li>
                    {% endif %}
                  {% endunless %}
              {%- endfor -%}
            </ul>

            {%- if paginate.pages > 1 -%}
              {% render 'pagination', paginate: paginate, anchor: '' %}
            {%- endif -%}
          </div>
        {%- endif -%}
      {%- endpaginate -%}
    </div>
  </div>
</div>

{%  if template contains "color-split" %}
<style>
  #ProductCount{display:none !important;}
</style>
{% endif %}

{%  if collection.description != blank %}
  <div class=" facets-vertical page-width">
   <div class="collectiontitle" style="display:none;"> <h1 class="h2">{%  if collection.metafields.custom.seo_title %}{{ collection.metafields.custom.seo_title }}{% else %}{{ collection.title }}{% endif %}</h1></div>
<div class="collectiontext" style="display:none;">{{ collection.description }}</div>
  </div>
  <style>
    .collectiontitle{width:37%;}
    .collectiontext{width:58%;}

    .collectiontitle .h2{    margin-top: 0px;
    background: black;
    color: white;
    padding: 5px 20px;
    margin-right: 40px;font-size:4.5rem;    margin-top: 30px;line-height: 5rem;}
    @media only screen and (max-width: 768px) {
    .collectiontitle{width:100%;}
    .collectiontext{width:100%;}

          .collectiontitle .h2{    margin-top: 0px;
    background: black;
    color: white;
    padding: 10px 20px;
    margin-right: 0px;font-size:4rem;    margin-top: 0px;    line-height: 4rem;}
}
  </style>
{% endif %}

{% if section.settings.show_compare %}
  {% unless collection.handle == 'shop-all' or collection.handle == 'all' %}
{% render 'compare-product' %}
{% endunless %}
 {% endif %}
<script type="module">
  import { InfiniScroll } from '{{ 'infinitescroll.js' | asset_url}}';

  function loadInfinite(e) {
    e = window.event || e;
    let target = e.target;
    e.preventDefault();
    InfiniScroll({
      itemsContainerSelector: '#product-grid',
      paginationContainerSelector: '#AjaxinatePagination',
      offset: 0,
      loadingText: 'Loading…',
      debug: false,
      callback: function(data) {
        document.querySelectorAll('.product-colors-wrap .color-swatch').forEach(swatch => {
          swatch.addEventListener('click', function(e) {
            e.preventDefault();
            
            e.target.closest('.product-colors-wrap').querySelectorAll('.color-swatch').forEach(swatchImg =>{
              swatchImg.classList.remove('active');
            });
            swatch.classList.add('active');
      
            e.target.closest('.card-wrapper').querySelector('.card-mainimg').style.display = 'none';
            e.target.closest('.card-wrapper').querySelectorAll('.grid-product__color-image').forEach(swatchBGImg => {
              swatchBGImg.classList.remove('is-active');
            });
            
            var id = swatch.dataset.variantId;
            var image = swatch.dataset.variantImage;
            var variant_url = swatch.href;
            var img_Element = "<a href="+variant_url+"><img src="+image+" loading='lazy' /></a>";
            var el = document.querySelector('.grid-product__color-image--' + id);
            var lifestyleurl = e.target.closest('.card-wrapper').querySelector('.life-style-content');
      //el.style.backgroundImage = 'url(' + image + ')';
      el.innerHTML = img_Element;
      el.classList.add('is-active');
      if(lifestyleurl){
        lifestyleurl.querySelector('a').href = variant_url
      }
          });
        });
        document.querySelectorAll('.grid-product__colors').forEach(grid =>{grid.firstElementChild.click()});
      }
    }).start();
    document.dispatchEvent(new CustomEvent('scroll'))
  }

  const firstLoad = document.querySelector('.pagination__first-page#AjaxinatePagination');
  if (firstLoad) {
    let firstLoadLink = firstLoad.querySelector('a');
    firstLoadLink.addEventListener('click', loadInfinite);
  }
</script>
<script>
  let filter_btn = document.querySelector('.filter-icon-btn');
  filter_btn.addEventListener('click', () => {
    filter_btn.classList.toggle('active');
    document.querySelector('.facets-vertical').classList.toggle('active');
    let proDiv = document.querySelector('.product-grid-container');
    let proDivvv = document.querySelector('#product-grid');
    
    if (proDiv.classList.contains('filter-animation')) {
        proDiv.classList.remove('filter-animation');
        proDivvv.classList.remove('grid--3-col-desktop');
        proDivvv.classList.add('grid--4-col-desktop');
    }
    else{
      setTimeout(() => {
        proDiv.classList.add('filter-animation');
        proDivvv.classList.add('grid--3-col-desktop');
        proDivvv.classList.remove('grid--4-col-desktop');
        },30);
    }
  });
  let quick_filters = document.querySelectorAll('.quick-filter-link li');
  quick_filters.forEach(quickFilter => {
    quickFilter.addEventListener('click', () => {
      let filter_val = quickFilter.getAttribute('filter-value').toLowerCase();
      let original_filters = document.querySelectorAll('.facet-checkbox input');
      original_filters.forEach(originalFilter => {
        let original_val = originalFilter.value.toLowerCase();
        if (filter_val === original_val) {
          originalFilter.click();
        }
      });
    });
  });
  
  console.log("hellooo")
</script>
{% schema %}
{
  "name": "t:sections.main-collection-product-grid.name",
  "class": "section",
  "settings": [
    {
      "type": "range",
      "id": "products_per_page",
      "min": 8,
      "max": 48,
      "step": 4,
      "default": 16,
      "label": "t:sections.main-collection-product-grid.settings.products_per_page.label"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 5,
      "step": 1,
      "default": 4,
      "label": "t:sections.main-collection-product-grid.settings.columns_desktop.label"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header__3.content"
    },
    {
      "type": "select",
      "id": "image_ratio",
      "options": [
        {
          "value": "adapt",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__1.label"
        },
        {
          "value": "portrait",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__2.label"
        },
        {
          "value": "square",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__3.label"
        }
      ],
      "default": "adapt",
      "label": "t:sections.main-collection-product-grid.settings.image_ratio.label"
    },
    {
      "type": "checkbox",
      "id": "enable_swatches",
      "default": false,
      "label": "Enable Swatches"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_vendor.label"
    },
    {
      "type": "checkbox",
      "id": "show_rating",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_rating.label",
      "info": "t:sections.main-collection-product-grid.settings.show_rating.info"
    },
    {
      "type": "checkbox",
      "id": "enable_quick_add",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.enable_quick_buy.label"
    },
    {
      "type": "checkbox",
      "id": "show_compare",
      "default": false,
      "label": "Enable comparison button"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header__1.content"
    },
    {
      "type": "checkbox",
      "id": "enable_filtering",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.enable_filtering.label",
      "info": "t:sections.main-collection-product-grid.settings.enable_filtering.info"
    },
    {
      "type": "select",
      "id": "filter_type",
      "options": [
        {
          "value": "horizontal",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__1.label"
        },
        {
          "value": "vertical",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__2.label"
        },
        {
          "value": "drawer",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__3.label"
        }
      ],
      "default": "horizontal",
      "label": "t:sections.main-collection-product-grid.settings.filter_type.label",
      "info": "t:sections.main-collection-product-grid.settings.filter_type.info"
    },
    {
      "type": "checkbox",
      "id": "enable_sorting",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.enable_sorting.label"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header_mobile.content"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "default": "2",
      "label": "t:sections.main-collection-product-grid.settings.columns_mobile.label",
      "options": [
        {
          "value": "1",
          "label": "t:sections.main-collection-product-grid.settings.columns_mobile.options__1.label"
        },
        {
          "value": "2",
          "label": "t:sections.main-collection-product-grid.settings.columns_mobile.options__2.label"
        }
      ]
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ]
}
{% endschema %}
