{%- liquid
  assign swatch_trigger = 'Color' | downcase
  assign swatch_file_extension = 'png'
  assign color_count = 0
-%}

{%- for option in product.options_with_values -%}
  {%- liquid
    assign option_name = option.name | downcase
    assign is_color = false
    if option_name contains swatch_trigger
      assign is_color = true
    elsif swatch_trigger == 'color' and option_name contains 'colour'
      assign is_color = true
    endif
  -%}

  {%- if is_color -%}
    {%- assign option_index = forloop.index0 -%}
    {%- assign values = '' -%}
    <div class="grid-product__colors grid-product__colors--{{ product.id }}">
      {%- for variant in product.variants -%}
        {%- assign value = variant.options[option_index] %}
        {%- unless values contains value -%}
        
          {%- liquid
            assign values = values | join: ',' | append: ',' | append: value | split: ','

            assign color_file_name = value | handle | append: '.' | append: swatch_file_extension
            assign color_image = color_file_name | file_img_url: '50x50' | prepend: 'https:' | split: '?' | first
            assign color_swatch_fallback = value | split: ' ' | last | handle
            assign color_count = color_count | plus: 1
          -%}
          {% if color_count >13 %}
            <span class="color_divider">+ </span>
           {% break %}
        {% endif %}
           <a
            href="{{ variant.url }}"
            class="color-swatch color-swatch--small color-swatch--{{ value | handle }}{% if variant.image %} color-swatch--with-image{% endif %}{% if forloop.first %} active{% endif %}"
            {% if variant.image %}
              data-variant-id="{{ variant.id }}"
              data-variant-image="{{ variant.image | img_url: '400x' }}"
            {% endif %}
            aria-label="{{ product.title | escape }} - {{ value | escape }}"
            color-name = "{{ variant.title | replace:'/', ' ' }}"
            data-price = "{{ variant.price | money }}"
                  {% if variant.compare_at_price and variant.compare_at_price > 0 %}
                  data-compareprice ="{{ variant.compare_at_price | money }}"
                  {% endif %}
            >
            <img loading="lazy" alt="{{ variant.title | replace:'/', ' ' }}" src="{{ variant.image | image_url }}" width="32" height="32" />
          </a>
        {%- endunless -%}
       {%- endfor -%}
    </div>
   
    {%  if color_count > 3 %}
<script>
  var elem = document.querySelector('.product-colors-wrap .grid-product__colors--{{ product.id }}');
var flkty = new Flickity( elem, {
        pageDots: true,
        prevNextButtons: false,
        freeScroll: true,
        contain: true,
        groupCells: true,
        cellAlign: "left"
});
  {%  if template contains "collection" %}  
  let observer{{ product.id }} = new MutationObserver((mutations) => {
  mutations.forEach((mutation) => {
    let oldValue{{ product.id }} = mutation.oldValue;
    let newValue{{ product.id }} = mutation.target.textContent;
    if (oldValue{{ product.id }} !== newValue{{ product.id }}) {
       console.log('change observed');
        var elem = document.querySelector('.grid-product__colors--{{ product.id }}');
        var flkty = new Flickity( elem, {
        pageDots: true,
        prevNextButtons: false,
        freeScroll: true,
        contain: true,
        groupCells: true,
        cellAlign: "left"
});
    }
  });
});

observer{{ product.id }}.observe(document.getElementById("ProductGridContainer"), {
  characterDataOldValue: true, 
  subtree: false, 
  childList: true, 
  characterData: true
});
    {% endif%}


  
</script>
      <style>
        .grid-product__colors--{{ product.id }} {display:block !important;}

        .grid-product__colors--{{ product.id }} .color-swatch {    border: 3px solid white;}

        .grid-product__colors--{{ product.id }}:focus-visible {
    outline: none;
    outline-offset: 0rem;
    box-shadow: 0 0 0 0rem;
}
      </style>
      {% endif %}
  {%- endif -%}
{%- endfor -%}
<style>
  .grid-product__colors.slider{display:block;}
</style>